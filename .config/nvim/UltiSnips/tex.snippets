snippet sign "Signature"
Yours sincerely

Ashish Panigrahi
endsnippet

snippet today "Date"
'date +%F'
endsnippet

#begins a class in LaTeX
snippet beg "begin{} / end{}" bA
\begin{$1}
$0
\end{$1}
endsnippet

#fractions
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "Fraction" wr
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet


#evaluation of expressions using sympy
snippet sympy "sympy block " w
sympy $1 sympy$0
endsnippet

priority 10000
snippet 'sympy(.*)sympy' "evaluate sympy" wr
`!p
from sympy import *
x, y, z, t = symbols('x y z t')
k, m, n = symbols('k m n', integer=True)
f, g, h = symbols('f g h', cls=Function)
init_printing()
snip.rv = eval('latex(' + match.group(1).replace('\\', '') \
    .replace('^', '**') \
    .replace('{', '(') \
    .replace('}', ')') + ')')
`
endsnippet

#inline math mode
snippet mk "Math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
    snip.rv = ' '
else:
    snip.rv = ''
`$2
endsnippet

#display math mode
snippet dm "Math" wA
\[
$1
\] $0
endsnippet

snippet enum "Enumerate" b
\begin{enumerate}
	\item $0
\end{enumerate}
endsnippet

snippet item "Itemize" b
\begin{itemize}
	\item $0
\end{itemize}
endsnippet

snippet s "Section" b
\section{$1}
$0
endsnippet

snippet s1 "Section*" b
\section*{$1}
$0
endsnippet

snippet ss "Subsection" b
\subsection{$1}
$0
endsnippet

snippet ss1 "Subsection*" b
\subsection*{$1}
$0
endsnippet

snippet sss "Subsubsection" b
\subsubsection{$1}
$0
endsnippet

snippet sss1 "Subsubsection*" b
\subsubsection*{$1}
$0
endsnippet

# renders bold text
snippet bf "Bold"
\textbf{$1} $0
endsnippet

# renders italic text
snippet it "Italic"
\textit{$1} $0
endsnippet

# renders underline text
snippet und "Underline"
\underline{$1} $0
endsnippet

# citing!
snippet ci "Cite"
\cite{$1} $0
endsnippet

# adding equations
snippet eq "Equation" bA
\begin{equation}
	$1
\end{equation}
$0
endsnippet

# adding \label
snippet lb "Label"
\label{$1} $0
endsnippet

# adding \ref
snippet rf "Reference"
\ref{$1} $0
endsnippet

# converts sympy code into latex
snippet sympy "sympy block" w
sympy $1 sympy$0
endsnippet

snippet 'sympy(.*)sympy' "evaluate sympy" wr
`!p
from sympy import *
x, y, z, t = symbols('x y z t')
k, m, n = symbols('k m n', integer=True)
f, g, h = symbols('f g h', cls=Function)
init_printing()
snip.rv = eval('latex(' + match.group(1).replace('\\', '') \
		.replace('^', '**') \
		.replace('{', '(') \
		.replace('}', ')') + ')')
`
endsnippet

# \usepackage
snippet usp "Usepackage" bA
\usepackage{$1}
endsnippet

snippet dot "dot"
\dot{$1} $0
endsnippet

snippet vec "vector"
\vec{$1} $0
endsnippet

snippet ra "rightarrow"
$\rightarrow$ $0
endsnippet

snippet lra "longrightarrow"
$\longrightarrow$ $0
endsnippet

snippet lim "limit"
\lim_{$1} {$2} $0
endsnippet

snippet () "paran"
\left( $1 \right ) $0
endsnippet

snippet pdv "partial derivation"
\frac{\partial $1}{\partial $2} $0
endsnippet

snippet dv "derivative"
\frac{d $1}{d $2} $0
endsnippet

snippet sum "summation"
\sum_{$1} $0
endsnippet
