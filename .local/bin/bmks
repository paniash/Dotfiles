#!/bin/sh

# set path where urls will be stored
URL_FILE_PATH="$HOME"/.config/bmks/
# name of file urls will be stored in
URL_FILE_NAME=urls.txt

show_usage() {
    while IFS= read -r LINE; do
        printf "%s\n" "$LINE" ;
    done <<EOF
Usage: bmks [OPTIONS...];
  OPTIONS:
    help                              Show this help message;
    add                               Add a new bookmark;
    del                               Remove a bookmark;
    ls                                Show all bookmarks;

EOF
}

LIST_LIMIT=20

bmks_add() {
	[ -z "$url" ] && printf "Error: url must be provided\n\n" && show_usage && exit 0
	printf "Description: "
	read -r description
	[ -z "$description" ] && echo "$url" >> "$URL_FILE_PATH"/"$URL_FILE_NAME"
	[ -n "$description" ] && echo "$description - $url" >> "$URL_FILE_PATH"/"$URL_FILE_NAME"
    echo "Bookmark added!"
}

bmks_ls() {
	bmks_check
    sort < "$URL_FILE_PATH"/"$URL_FILE_NAME"
}

bmks_del() {
	bmks_check
    PATTERN=$(sort < $URL_FILE_PATH/$URL_FILE_NAME | dmenu -F -i -l $LIST_LIMIT)
    sed -i "/$PATTERN/d" $URL_FILE_PATH/$URL_FILE_NAME && echo "Bookmark removed."
}

bmks_display() {
    bmks_check
    sort < "$URL_FILE_PATH"/"$URL_FILE_NAME" | dmenu -F -i -l "$LIST_LIMIT" -p "Open link: " | awk '{print $(NF)}' | xargs -I '{}' "$BROWSER" {}
}

bmks_check() {
	[ ! -s "$URL_FILE_PATH"/"$URL_FILE_NAME" ] && printf "Error: No bookmarks found to display. Try adding some!\n\n" && show_usage && exit 0
}

bmks_error() {
    printf "Invalid option\n\n"
    show_usage
    exit 0
}

[ ! -d "$URL_FILE_PATH" ] && mkdir "$URL_FILE_PATH"
[ ! -f "$URL_FILE_PATH"/"$URL_FILE_NAME" ] && touch "$URL_FILE_PATH"/"$URL_FILE_NAME"

case "$1" in
	"help") show_usage ;;
	"add") url=$2; bmks_add ;;
	"del") bmks_del ;;
	"ls") bmks_ls ;;
	"") bmks_display ;;
    *) bmks_error ;;
esac
